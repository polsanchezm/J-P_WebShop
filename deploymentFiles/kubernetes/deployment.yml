apiVersion: v1
data:
  .dockerconfigjson: eyJ ...
kind: Secret
metadata:
  creationTimestamp: null
  name: kube0-credentials
  namespace: grup3
type: kubernetes.io/dockerconfigjson

---
apiVersion: v1
kind: Service
metadata:
  name: nodeport-vue
  namespace: grup3
spec:
  type: NodePort
  selector:
    app: vue
  ports:
    - port: 80
      targetPort: 80
      nodePort: 32003

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: vue-deployment
  namespace: grup3
  labels:
    app: vue
spec:
  selector:
    matchLabels:
      app: vue
  replicas: 1
  template:
    metadata:
      labels:
        app: vue
    spec:
      containers:
        - name: frontend-container
          image: IMAGE_NAME:latest
          ports:
            - containerPort: 80
              name: vue-port
          resources:
            requests:
              memory: 200Mi
              cpu: 100m
            limits:
              memory: 300Mi
              cpu: 200m
      imagePullSecrets:
        - name: kube0-credentials

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mariadb-pvc
  namespace: grup3
spec:
  storageClassName: nfs-client
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 2.5Gi

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mariadb-initdb-config
  namespace: grup3
data:
  init.sql: |
    CREATE USER 'USERNAME'@'%' IDENTIFIED BY 'PASSWORD';
    GRANT ALL PRIVILEGES ON *.* TO 'USERNAME'@'%';
    FLUSH PRIVILEGES;

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mariadb
  namespace: grup3
  labels:
    app: mariadb
spec:
  serviceName: mariadb
  replicas: 1
  selector:
    matchLabels:
      app: mariadb
  template:
    metadata:
      labels:
        app: mariadb
    spec:
      containers:
        - name: mariadb
          image: mariadb:latest
          env:
            - name: DB_DATABASE
              value: DB_NAME
            - name: MYSQL_ROOT_PASSWORD
              value: ROOT_PASSWD
          resources:
            requests:
              memory: 250Mi
              cpu: 200m
            limits:
              memory: 350Mi
              cpu: 400m
          volumeMounts:
            - name: mariadb-data
              mountPath: /var/lib/mysql
            - name: mariadb-initdb
              mountPath: /docker-entrypoint-initdb.d
      volumes:
        - name: mariadb-data
          persistentVolumeClaim:
            claimName: mariadb-pvc
        - name: mariadb-initdb
          configMap:
            name: mariadb-initdb-config

---
apiVersion: v1
kind: Service
metadata:
  name: clusterip-bd
  namespace: grup3
spec:
  type: ClusterIP
  selector:
    app: mariadb
  ports:
    - port: 3306
      targetPort: 3306
  clusterIP: 10.96.3.10

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: laravel-pvc
  namespace: grup3
spec:
  storageClassName: nfs-client
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 1Gi

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: laravel-deployment
  namespace: grup3
  labels:
    app: laravel
spec:
  selector:
    matchLabels:
      app: laravel
  replicas: 1
  template:
    metadata:
      labels:
        app: laravel
    spec:
      containers:
        - name: backend-container
          image: IMAGE_NAME:latest
          ports:
            - containerPort: 80
              name: laravel-port
          resources:
            requests:
              memory: 200Mi
              cpu: 200m
            limits:
              memory: 300Mi
              cpu: 300m
          volumeMounts:
            - name: laravel-data
              mountPath: /var/www/html/storage
      volumes:
        - name: laravel-data
          persistentVolumeClaim:
            claimName: laravel-pvc
      imagePullSecrets:
        - name: kube0-credentials

---
apiVersion: v1
kind: Service
metadata:
  name: clusterip-backend
  namespace: grup3
spec:
  type: ClusterIP
  selector:
    app: laravel
  ports:
    - port: 80
      targetPort: 80
  clusterIP: 10.96.3.15
